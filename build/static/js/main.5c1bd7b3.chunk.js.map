{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","addNew","newObject","post","removeName","id","delete","changeNumber","changedNameObject","put","Filter","props","value","onChange","PersonForm","onSubmit","nameInputValue","nameOnChange","numberInputValue","numberOnChange","type","Persons","name","number","onClick","Notification","message","console","log","className","ErrorNotification","errorMessage","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","filterValue","setFilterValue","notification","setNotification","errorNotification","setErrorNotification","useEffect","initialPersons","tulostettava","length","event","target","toUpperCase","filter","person","includes","preventDefault","some","element","window","confirm","oldNameObject","find","n","map","nameObject","catch","error","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c1bd7b3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst removeName = (id) =>  {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response =>response.data)\r\n}\r\n\r\nconst changeNumber = (changedNameObject) =>    {\r\n    const request = axios.put(`${baseUrl}/${changedNameObject.id}`, changedNameObject)\r\n    \r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst personService = { getAll, addNew, removeName, changeNumber }\r\n\r\nexport default personService","\nimport React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\n\nimport './index.css'\n\nconst Filter = (props) => {\n  return (\n    <div>\n    filter: <input value={props.value}\n    onChange ={props.onChange} />\n  </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n  <form onSubmit={props.onSubmit}>\n  <div>\n    name: <input value={props.nameInputValue} \n    onChange={props.nameOnChange}/>\n  </div>\n  <div>\n    number: <input value={props.numberInputValue}\n    onChange={props.numberOnChange}/>\n  </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n</form>\n  )}\n\n  const Persons = (props) => {\n    return (\n    <div>\n      <p key={props.id} >{props.name} {props.number} \n      <button onClick={props.onClick}> delete </button></p>\n    </div>\n    )\n  }\n\n  const Notification = ({message}) => {\n    console.log('Mitä ihmettä!? ', message)\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )}\n\n  const ErrorNotification = ({errorMessage}) => {\n    if (errorMessage === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"errorNotification\">\n        {errorMessage}\n      </div>\n    )}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState([])\n  const [ filterValue, setFilterValue ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ errorNotification, setErrorNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  let tulostettava = []\n\n  const addNewName = (event) => {\n    event.preventDefault()\n\n    const alreadyAdded = (element) => element.name === newName\n      \n    if (persons.some(alreadyAdded) === true) {\n      if (window.confirm(`${newName} has already been added to phonebook, replace old number with new one`))  {\n        const oldNameObject = persons.find(n => n.name === newName)\n        \n        const changedNameObject = {...oldNameObject, number: newNumber }\n        personService\n        .changeNumber(changedNameObject) \n         .then( \n          response => {\n            tulostettava = persons.map(nameObject => nameObject.id !== changedNameObject.id ? nameObject : response)\n            setPersons(tulostettava)}\n          )\n          .catch(error => {\n            console.log('console error ', error.response.data)\n            setErrorNotification(`Information of ${newName} has already been removed from phonebook`)\n              setTimeout(() => {\n                setErrorNotification(null)\n              }, 2000)\n            setPersons(persons.filter(person => person.id !== changedNameObject.id))  \n          })\n          setNotification(`Number of ${newName} has been changed`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n          setNewFilter('')\n        }\n        \n      }\n     \n      else  {\n        const nameObject = {\n          name: newName, number: newNumber\n        }\n        personService\n        .addNew(nameObject)\n        .then(response => {\n        setPersons(persons.concat(response))\n        setNewFilter(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n        setNotification(`Added ${nameObject.name} to phonebook`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 2000)\n      }).catch(error => {\n        console.log('error frontend console ', error.response.data)\n        setErrorNotification(error.response.data.error)\n        setTimeout(() => {\n          setErrorNotification(null)\n        }, 3000)\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeleteOf = (id, name) => {\n    if (window.confirm(`Delete ${name}`))    {\n    \n    personService \n    .removeName(id)\n    .then( () => {\n      setPersons(persons.filter(person => person.id !== id))\n      setNewFilter('')\n    })\n    .catch(error => {\n      setErrorNotification(`Information of ${name} has already been removed from phonebook`)\n        setTimeout(() => {\n          setErrorNotification(null)\n        }, 2000)\n      setPersons(persons.filter(person => person.id !== id))\n      console.log(persons)\n    })\n    setNotification(`Removed ${name} from phonebook`)\n    console.log('removed ')\n        setTimeout(() => {\n          setNotification(null)\n        }, 2000)\n      \n    }\n  }\n\n  const handleNameChange = (event) =>  {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    let value = event.target.value.toUpperCase();\n    setNewFilter(persons.filter(person => person.name.toUpperCase().includes(value)))\n    setFilterValue(event.target.value)\n  }\n\n\n  if (newFilter.length === 0 && filterValue.length === 0) {\n    tulostettava = persons\n  } else if (newFilter.length === 0 && filterValue.length > 0) {\n    tulostettava = []\n  } else {\n    tulostettava = newFilter\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {errorNotification !== null ?\n      <ErrorNotification errorMessage={errorNotification}/>\n      :  <Notification message={notification}/>}\n        \n        <Filter value={filterValue} onChange ={handleFilterChange}/>\n      <h2>Add new</h2>\n        <PersonForm onSubmit = {addNewName} nameInputValue ={newName}\n          nameOnChange = {handleNameChange} numberInputValue ={newNumber}\n          numberOnChange = {handleNumberChange}/>\n      <h2>Numbers</h2>\n      <div>\n      {\n      tulostettava.map(person => \n        <Persons key = {person.id} name = {person.name} number = {person.number} \n          onClick = {() => handleDeleteOf(person.id, person.name)} />)\n      } \n        \n      </div>  \n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}